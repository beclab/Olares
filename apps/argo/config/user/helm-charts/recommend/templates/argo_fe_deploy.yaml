
---
apiVersion: v1
kind: Service
metadata:
  name: recommend
  namespace: {{ .Release.Namespace }}
spec:
  type: ExternalName
  externalName: argoworkflows-svc.{{ .Release.Namespace }}.svc.cluster.local
  ports:
    - name: http
      port: 2746
      protocol: TCP
      targetPort: 2746

---
apiVersion: v1
kind: Service
metadata:
  name: argoworkflows-ui
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: recommend
  type: ClusterIP

---
{{ if (eq .Values.debugVersion true) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommend
  namespace: {{ .Release.Namespace }}
  labels:
    app: recommend
    applications.app.bytetrade.io/author: bytetrade.io

    applications.app.bytetrade.io/name: recommend
    applications.app.bytetrade.io/owner: '{{ .Values.bfl.username }}'
  annotations:
    applications.app.bytetrade.io/icon: https://file.bttcdn.com/appstore/recommend/icon.png
    applications.app.bytetrade.io/title: recommend
    applications.app.bytetrade.io/version: '0.0.1'
    applications.app.bytetrade.io/entrances: '[{"name":"recommend", "host":"argoworkflows-ui", "port":80,"title":"recommend"}]'

spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: recommend
  template:
    metadata:
      labels:
        app: recommend
    spec:
      containers:
        - name: recommend-proxy
          image: nginx:stable-alpine3.17-slim
          imagePullPolicy: IfNotPresent
          ports:
            - name: proxy
              containerPort: 8080
          volumeMounts:
            - name: nginx-config
              readOnly: true
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: recommend-nginx-configs
            items:
              - key: nginx.conf
                path: nginx.conf
{{ end }}



---
apiVersion: v1
data:
  nginx.conf: |
    # Configuration checksum:

    pid /var/run/nginx.pid;

    worker_processes auto;

    events {
      worker_connections 1024;
    }

    http {
      server {
        listen 8080;

        location / {
          proxy_pass http://recommend:2746;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
      }
    }
kind: ConfigMap
metadata:
  name: recommend-nginx-configs
  namespace: {{ .Release.Namespace }}

