

{{ $auth_rootpath := printf "%s%s" .Values.rootPath "/rootfs/auth" }}
{{- $auth_secret := (lookup "v1" "Secret" .Release.Namespace "authelia-secrets") -}}
{{- $jwt_secret := "" -}}
{{- $session_secret := "" -}}
{{- $hmac_secret := "" -}}
{{- $encryption_key := "" -}}
{{- $redis_password := "" -}}
{{- $pg_password := "" -}}
{{ if $auth_secret -}}
{{- $jwt_secret = (index $auth_secret "data" "jwt_secret") -}}
{{- $session_secret = (index $auth_secret "data" "session_secret") -}}
{{- $hmac_secret = (index $auth_secret "data" "hmac_secret") -}}
{{- $encryption_key = (index $auth_secret "data" "encryption_key") -}}
{{- $redis_password = (index $auth_secret "data" "redis_password") -}}
{{- $pg_password = (index $auth_secret "data" "pg_password") -}}
{{ else -}}
{{ $jwt_secret = randAlphaNum 16 | b64enc }}
{{ $session_secret = randAlphaNum 16 | b64enc }}
{{ $hmac_secret = randAlphaNum 16 | b64enc }}
{{ $encryption_key = randAlphaNum 32 | b64enc }}
{{ $redis_password = randAlphaNum 16 | b64enc }}
{{ $pg_password = randAlphaNum 16 | b64enc }}
{{- end -}}

---
apiVersion: v1
kind: Secret
metadata:
  name: authelia-secrets
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  jwt_secret: {{ $jwt_secret }}
  session_secret: {{ $session_secret }}
  hmac_secret: {{ $hmac_secret }}
  encryption_key: {{ $encryption_key }}
  redis_password: {{ $redis_password }}
  pg_password: {{ $pg_password }}

---
apiVersion: apr.bytetrade.io/v1alpha1
kind: MiddlewareRequest
metadata:
  name: authelia-pg
  namespace: os-system
spec:
  app: authelia
  appNamespace: os-system
  middleware: postgres
  postgreSQL:
    user: authelia_os_system
    password:
      valueFrom:
        secretKeyRef:
          key: pg_password
          name: authelia-secrets
    databases:
      - name: authelia

---
apiVersion: v1
data:
  configuration.yaml: |
    jwt_secret: {{ $jwt_secret | b64dec }}
    default_redirection_url: /

    server:
      host: 0.0.0.0
      port: 9091
      buffers:
        read: 10240

    log:
      level: debug

    totp:
      issuer: terminus.os

    # duo_api:
    #  hostname: api-123456789.example.com
    #  integration_key: ABCDEF
    #  # This secret can also be set using the env variables AUTHELIA_DUO_API_SECRET_KEY_FILE
    #  secret_key: 1234567890abcdefghifjkl

    # authentication_backend:
    #   file:
    #     path: /config/users_database.yml

    access_control:
      config_type: terminus
      default_policy: deny
      rules:
        # Rules applied to everyone
        - domain: example.myterminus.com
          policy: one_factor
          # subject:
          # - ['group:platform-admin', 'group:workspace-manager']
        - domain: 'files.example.myterminus.com'
          policy: two_factor
          # subject:
          # - ['group:platform-admin', 'group:workspace-manager']

    session:
      # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
      secret: {{ $session_secret | b64dec }}
      name: authelia_session
      same_site: 'none'

      # expiration: 1209600  # probably nanosecond
      # inactivity: 1209600  # 5 minutes
      cookies:
        - domain: 'example.com'
          authelia_url: https://authelia-svc.example.com/

      redis:
        host: authelia-storage-svc
        port: 6379
        # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD_FILE
        password: {{ $redis_password | b64dec }}
        maximum_active_connections: 100
        minimum_idle_connections: 30

    regulation:
      max_retries: 3
      find_time: 120
      ban_time: 300

    storage:
      encryption_key: {{ $encryption_key | b64dec }}
      postgres:
        host: citus-headless.os-system
        port: 5432
        database: os_system_authelia
        schema: public
        username: authelia_os_system
        password: {{ $pg_password | b64dec }}
        timeout: 5s

    notifier:
      disable_startup_check: false
      filesystem:
        filename: /app/notification.txt
    identity_providers:
      oidc:
        hmac_secret: {{ $hmac_secret | b64dec }}
        issuer_certificate_chain: |
          -----BEGIN CERTIFICATE-----
          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
          uQ==
          -----END CERTIFICATE-----
        issuer_private_key: |
          -----BEGIN PRIVATE KEY-----
          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
          1lfw6aleWRKlBuNJVrNWcNzUavPcNcQ=
          -----END PRIVATE KEY-----
        access_token_lifespan: 1h
        authorize_code_lifespan: 1m
        id_token_lifespan: 1h
        refresh_token_lifespan: 90m
        enable_client_debug_messages: false
        enforce_pkce: public_clients_only
        cors:
          endpoints:
            - authorization
            - token
            - revocation
            - introspection
        clients:
          - id: example
            description: example
            secret: '$pbkdf2-sha512$310000$c8p78n7pUMln0jzvd4aK4Q$JNRBzwAo0ek5qKn50cFzzvE9RXV88h1wJn5KGiHrD0YKtZaR/nCb2CJPOsKaPK0hjf.9yHxzQGZziziccp6Yng'  # The digest of 'insecure_secret'.
            sector_identifier: ''
            public: false
            authorization_policy: two_factor
            consent_mode: implicit
            pre_configured_consent_duration: 1w
            audience: []
            scopes:
              - openid
              - groups
              - email
              - profile
            redirect_uris:
              - https://www.example.com/auth/auth/openid_connect/callback
            grant_types:
              - refresh_token
              - authorization_code
            response_types:
              - code
            response_modes:
              - form_post
              - query
              - fragment
            userinfo_signing_algorithm: none
  # users_database.yaml: |
  #   users:
  #     authelia:
  #       disabled: false
  #       displayname: "Authelia User"
  #       # Password is authelia
  #       password: "$6$rounds=50000$BpLnfgDsc2WD8F2q$Zis.ixdg9s/UOJYrs56b5QEZFiZECu0qZVNsIYxBaNJ7ucIL.nlxVCT5tqh8KHG8X4tlwCFm5r6NTOZZ5qRFN/"  # yamllint disable-line rule:line-length
  #       email: authelia@authelia.com
  #       groups:
  #         - admins
  #         - dev

kind: ConfigMap
metadata:
  name: authelia-configs
  namespace: {{ .Release.Namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authelia-backend
  namespace: {{ .Release.Namespace }}
  labels:
    app: authelia-backend
    applications.app.bytetrade.io/author: bytetrade.io
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authelia-backend
  template:
    metadata:
      labels:
        app: authelia-backend
    spec:
      serviceAccountName: os-internal
      serviceAccount: os-internal
      priorityClassName: "system-cluster-critical"      
      initContainers:
      - name: init-container
        image: 'postgres:16.0-alpine3.18'
        command:
          - sh
          - '-c'
          - >-
            echo -e "Checking for the availability of PostgreSQL Server deployment";
            until psql -h $PGHOST -p $PGPORT -U $PGUSER -d $PGDB -c "SELECT 1";
            do sleep 1; printf "-"; done; sleep 15;
            echo -e " >> $PGDB exists";
        env:
          - name: PGHOST
            value: citus-headless.os-system
          - name: PGPORT
            value: "5432"
          - name: PGUSER
            value: authelia_os_system
          - name: PGPASSWORD
            value: {{ $pg_password | b64dec }}
          - name: PGDB
            value: os_system_authelia
      - args:
        - -it
        - authelia-storage-svc:6379,redis.kubesphere-system:6379
        image: owncloudci/wait-for:latest
        imagePullPolicy: IfNotPresent
        name: check-redis

      containers:      
      - name: authelia
        image: beclab/auth:0.1.42
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9091
        env:
        - name: TZ
          value: UTC
        - name: APP_RANDOM_KEY
          valueFrom:
            secretKeyRef:
              name: app-key
              key: random-key
        volumeMounts:
        - name: config
          mountPath: /app/configuration.yml
          subPath: configuration.yaml
        - name: data
          mountPath: /config

      volumes:
      - name: config
        configMap:
          name: authelia-configs
          defaultMode: 438
          items:
          - key: configuration.yaml
            path: configuration.yaml
      - name: data
        hostPath:
          type: DirectoryOrCreate
          path: {{ $auth_rootpath }}

---
apiVersion: v1
kind: Service
metadata:
  name: authelia-backend
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: authelia-backend
  type: ClusterIP
  ports:
    - protocol: TCP
      name: authelia
      port: 9091
      targetPort: 9091

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: redis
data:
  redis.conf: |-
    dir /srv
    port 6379
    bind 0.0.0.0
    appendonly yes
    daemonize no
    #protected-mode no
    requirepass {{ $redis_password | b64dec }}
    pidfile /srv/redis-6379.pid
    maxmemory 200000000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authelia-storage
  namespace: {{ .Release.Namespace }}
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      priorityClassName: "system-cluster-critical"
      containers:
      - name: redis
        image: redis:6.2.13-alpine3.18
        imagePullPolicy: IfNotPresent
        command:
          - "sh"
          - "-c"
          - "redis-server /usr/local/redis/redis.conf"
        ports:
        - containerPort: 6379
        resources:
          requests:
            cpu: 20m
            memory: 100Mi
          limits:
            cpu: 500m
            memory: 256Mi

        # FIXME: bugs in raspbian
        # livenessProbe:
        #   tcpSocket:
        #     port: 6379
        #   initialDelaySeconds: 300
        #   timeoutSeconds: 1
        #   periodSeconds: 10
        #   successThreshold: 1
        #   failureThreshold: 3
        # readinessProbe:
        #   tcpSocket:
        #     port: 6379
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 1
        #   periodSeconds: 10
        #   successThreshold: 1
        #   failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath:  /usr/local/redis/redis.conf
          subPath: redis.conf
        - name: data
          mountPath: /srv
      volumes:
      - name: config
        configMap:
          name: redis-config
      - name: data
        hostPath:
          type: DirectoryOrCreate
          path: {{ $auth_rootpath }}

---
apiVersion: v1
kind: Service
metadata:
  name: authelia-storage-svc
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
    app: redis
  type: ClusterIP
