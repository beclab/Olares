

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: vault
    applications.app.bytetrade.io/name: vault
    applications.app.bytetrade.io/owner: '{{ .Values.bfl.username }}'
    applications.app.bytetrade.io/author: bytetrade.io
  annotations:
    applications.app.bytetrade.io/icon: https://file.bttcdn.com/appstore/vault/icon.png
    applications.app.bytetrade.io/title: Vault
    applications.app.bytetrade.io/version: '0.0.1'
    applications.app.bytetrade.io/entrances: '[{"name":"vault", "host":"vault-service", "port":80,"title":"Vault"}]'
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      initContainers:
      - name: terminus-sidecar-init
        image: openservicemesh/init:v1.2.3
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          capabilities: 
            add:
            - NET_ADMIN
          runAsNonRoot: false
          runAsUser: 0
        command:
        - /bin/sh
        - -c
        - |
          iptables-restore --noflush <<EOF
          # sidecar interception rules
          *nat
          :PROXY_IN_REDIRECT - [0:0]
          :PROXY_INBOUND - [0:0]
          -A PROXY_IN_REDIRECT -p tcp -j REDIRECT --to-port 15003
          -A PROXY_INBOUND -p tcp --dport 15000 -j RETURN
          -A PROXY_INBOUND -p tcp -j PROXY_IN_REDIRECT
          -A PREROUTING -p tcp -j PROXY_INBOUND
          COMMIT
          EOF
        
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP


      containers:
      - name: vault-frontend
        image: beclab/vault-frontend:v1.2.6
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
      
      - name: notification-server
        image: beclab/vault-notification:v1.2.6
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3010
        env:
          - name: OS_SYSTEM_SERVER
            value: system-server.user-system-{{ .Values.bfl.username }}
          - name: OS_APP_SECRET
            value: '{{ .Values.os.vault.appSecret }}'
          - name: OS_APP_KEY
            value: {{ .Values.os.vault.appKey }}

      - name: terminus-envoy-sidecar
        image: envoyproxy/envoy-distroless:v1.25.2
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
        ports:
        - name: proxy-admin
          containerPort: 15000
        - name: proxy-inbound
          containerPort: 15003
        volumeMounts:
        - name: terminus-sidecar-config
          readOnly: true
          mountPath: /etc/envoy/envoy.yaml
          subPath: envoy.yaml
        command:
        - /usr/local/bin/envoy
        - --log-level
        - debug
        - -c
        - /etc/envoy/envoy.yaml
        env:
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      - name: terminus-ws-sidecar
        image: 'beclab/ws-gateway:v1.0.3'
        imagePullPolicy: IfNotPresent
        command:
          - /ws-gateway
        env:
          - name: WS_PORT
            value: '3010'
          - name: WS_URL
            value: /websocket/message
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

      volumes:
      # - name: vault-data
      #   hostPath:
      #     type: DirectoryOrCreate
      #     path: {{ .Values.userspace.appCache}}/vault/data
      # - name: vault-sign
      #   hostPath:
      #     type: DirectoryOrCreate
      #     path: {{ .Values.userspace.appCache}}/vault/sign
      # - name: vault-attach
      #   hostPath:
      #     type: DirectoryOrCreate
      #     path: {{ .Values.userspace.appCache}}/vault/attachments
      - name: terminus-sidecar-config
        configMap:
          name: sidecar-ws-configs
          items:
          - key: envoy.yaml
            path: envoy.yaml

---
apiVersion: v1
kind: Service
metadata:
  name: vault-service
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: vault
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: vault-server
  namespace: {{ .Release.Namespace }}
spec:
  type: ExternalName
  externalName: vault-server.os-system.svc.cluster.local
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: vault-notification
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  dataType: notification
  deployment: vault-deployment
  description: send notification to desktop client
  endpoint: vault-service.{{ .Release.Namespace }}
  group: service.vault
  kind: provider
  namespace: {{ .Release.Namespace }}
  opApis:
  - name: Create
    uri: /notification/create
  - name: Query
    uri: /notification/query
  version: v1
status:
  state: active

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ApplicationPermission
metadata:
  name: vault
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  app: vault
  appid: vault
  key: {{ .Values.os.vault.appKey }}
  secret: {{ .Values.os.vault.appSecret }}
  permissions:
  - dataType: token
    group: service.notification
    ops:
    - Create
    version: v1
status:
  state: active
