{{- $namespace := printf "%s%s" "user-system-" .Values.bfl.username -}}
{{- $knowledge_secret := (lookup "v1" "Secret" $namespace "rss-secrets") -}}

{{- $redis_password := "" -}}
{{ if $knowledge_secret -}}
{{ $redis_password = (index $knowledge_secret "data" "redis_password") }}
{{ else -}}
{{ $redis_password = randAlphaNum 16 | b64enc }}
{{- end -}}

{{- $redis_password_data := "" -}}
{{ $redis_password_data = $redis_password | b64dec }}


{{- $pg_password := "" -}}
{{ if $knowledge_secret -}}
{{ $pg_password = (index $knowledge_secret "data" "pg_password") }}
{{ else -}}
{{ $pg_password = randAlphaNum 16 | b64enc }}
{{- end -}}

{{- $knowledge_nats_secret := (lookup "v1" "Secret" $namespace "knowledge-secrets") -}}
{{- $nat_password := "" -}}
{{ if $knowledge_nats_secret -}}
{{ $nat_password = (index $knowledge_nats_secret "data" "nat_password") }}
{{ else -}}
{{ $nat_password = randAlphaNum 16 | b64enc }}
{{- end -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: knowledge-secrets
  namespace: user-system-{{ .Values.bfl.username }}
type: Opaque
data:
  pg_password: {{ $pg_password }}
  nat_password: {{ $nat_password }}
---
apiVersion: apr.bytetrade.io/v1alpha1
kind: MiddlewareRequest
metadata:
  name: knowledge-pg
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  app: knowledge
  appNamespace: {{ .Release.Namespace }}
  middleware: postgres
  postgreSQL:
    user: knowledge_{{ .Values.bfl.username }}
    password:
      valueFrom:
        secretKeyRef:
          key: pg_password
          name: knowledge-secrets
    databases:
    - name: knowledge
      extensions:
      - pg_trgm
      - btree_gin
---
apiVersion: apr.bytetrade.io/v1alpha1
kind: MiddlewareRequest
metadata:
  name: knowledge-nat
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  app: knowledge
  appNamespace: {{ .Release.Namespace }}
  middleware: nats
  nats:
    password:
      valueFrom:
        secretKeyRef:
          key: nat_password
          name: knowledge-secrets
    refs:
    - appName: download
      appNamespace: {{ .Release.Namespace }}
      subjects:
      - name: download_status
        perm:
        - pub
        - sub
    user: user-system-{{ .Values.bfl.username }}-knowledge
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: knowledge-secrets-auth
  namespace: {{ .Release.Namespace }}
data:
  redis_password: {{ $redis_password_data }}
  redis_addr: redis-cluster-proxy.user-system-{{ .Values.bfl.username }}:6379
  redis_host: redis-cluster-proxy.user-system-{{ .Values.bfl.username }}
  redis_port: '6379'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: knowledge-userspace-data
  namespace: {{ .Release.Namespace }}
data:
  appData: "{{ .Values.userspace.appData }}"
  appCache: "{{ .Values.userspace.appCache }}"
  username: "{{ .Values.bfl.username }}"

---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: knowledge
  namespace: {{ .Release.Namespace }}
  labels:
    app: knowledge
    applications.app.bytetrade.io/author: bytetrade.io
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: knowledge
  template:
    metadata:
      labels:
        app: knowledge
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000

      initContainers:
      - name: init-data
        image: busybox:1.28
        securityContext:
          privileged: true
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - name: juicefs
          mountPath: /juicefs
        command:
        - sh
        - -c
        - |
          chown -R 1000:1000 /juicefs
      - name: init-container
        image: 'postgres:16.0-alpine3.18'
        command:
          - sh
          - '-c'
          - >-
            echo -e "Checking for the availability of PostgreSQL Server deployment"; until psql -h $PGHOST -p $PGPORT -U $PGUSER -d $PGDB -c "SELECT 1"; do sleep 1; printf "-"; done; sleep 5; echo -e " >> PostgreSQL DB Server has started";
        env:
          - name: PGHOST
            value: citus-master-svc.user-system-{{ .Values.bfl.username }}
          - name: PGPORT
            value: "5432"
          - name: PGUSER
            value: knowledge_{{ .Values.bfl.username }}
          - name: PGPASSWORD
            value: {{ $pg_password | b64dec }}
          - name: PGDB
            value: user_space_{{ .Values.bfl.username }}_knowledge
      containers:
      - name: knowledge
        image: "beclab/knowledge-base-api:v0.1.57"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000

        ports:
        - containerPort: 3010
        env:
        - name: BACKEND_URL
          value: http://127.0.0.1:8080
        - name: RSSHUB_URL
          value: 'http://rss-server.os-system:1200'
        - name: SEARCH_URL
          value: 'http://search3.os-system:80'
        - name: REDIS_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: knowledge-secrets-auth
              key: redis_password
        - name: REDIS_ADDR
          valueFrom:
            configMapKeyRef:
              name: knowledge-secrets-auth
              key: redis_addr
        - name: PDF_SAVE_PATH
          value: /data/Home/Documents/Pdf/
        - name: PG_USERNAME
          value: knowledge_{{ .Values.bfl.username }}
        - name: PG_PASSWORD
          value: {{ $pg_password | b64dec }}
        - name: PG_HOST
          value: citus-master-svc.user-system-{{ .Values.bfl.username }}
        - name: PG_PORT
          value: "5432"
        - name: PG_DATABASE
          value: user_space_{{ .Values.bfl.username }}_knowledge
        - name: DOWNLOAD_URL
          value: http://download-svc.user-space-{{ .Values.bfl.username }}:3080
        - name: BFL_USER_NAME
          value: "{{ .Values.bfl.username }}"
        - name: SETTING_URL
          value: http://system-server.user-system-{{ .Values.bfl.username }}
        - name: NATS_HOST
          value: nats.user-system-{{ .Values.bfl.username }}
        - name: NATS_PORT
          value: "4222"
        - name: NATS_USERNAME
          value: user-system-{{ .Values.bfl.username }}-knowledge
        - name: NATS_PASSWORD
          value: {{ $nat_password | b64dec }}
        - name: NATS_SUBJECT
          value: "terminus.{{ .Release.Namespace }}.download_status"
        - name: SOCKET_URL
          value: 'http://localhost:40010'
        volumeMounts:
        - name: watch-dir
          mountPath: /data/Home/Documents

        resources:
          requests:
            cpu: 20m
            memory: 50Mi
          limits:
            cpu: "1"
            memory: 1Gi

      - name: backend-server
        image: "beclab/recommend-backend:v0.0.25"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000

        env:
        - name: LISTEN_ADDR
          value: 127.0.0.1:8080
        - name: REDIS_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: knowledge-secrets-auth
              key: redis_password
        - name: REDIS_ADDR
          valueFrom:
            configMapKeyRef:
              name: knowledge-secrets-auth
              key: redis_addr
        - name: OS_SYSTEM_SERVER
          value: system-server.user-system-{{ .Values.bfl.username }}
        - name: OS_APP_SECRET
          value: '{{ .Values.os.wise.appSecret }}'
        - name: OS_APP_KEY
          value: {{ .Values.os.wise.appKey }}
        - name: RSS_HUB_URL
          value: 'http://rss-server.os-system:1200/'
        - name: WE_CHAT_REFRESH_FEED_URL
          value: https://recommend-wechat-prd.bttcdn.com/api/wechat/entries
        - name: WECHAT_ENTRY_CONTENT_GET_API_URL
          value: https://recommend-wechat-prd.bttcdn.com/api/wechat/entry/content
        - name: PG_USERNAME
          value: knowledge_{{ .Values.bfl.username }}
        - name: PG_PASSWORD
          value: {{ $pg_password | b64dec }}
        - name: PG_HOST
          value: citus-master-svc.user-system-{{ .Values.bfl.username }}
        - name: PG_PORT
          value: "5432"
        - name: PG_DATABASE
          value: user_space_{{ .Values.bfl.username }}_knowledge
        - name: WATCH_DIR
          value: /data/Home/Downloads
        - name: NOTIFY_SERVER
          value: fsnotify-svc.user-system-{{ .Values.bfl.username }}:5079
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CONTAINER_NAME
          value: backend-server
        - name: YT_DLP_API_URL
          value: http://download-svc.user-space-{{ .Values.bfl.username }}:3082/api/v1/get_metadata
        - name: DOWNLOAD_API_URL
          value: http://download-svc.user-space-{{ .Values.bfl.username }}:3080/api/termius/download
        - name: SETTING_API_URL
          value: http://system-server.user-system-{{ .Values.bfl.username }}/legacy/v1alpha1/service.settings/v1/api/cookie/retrieve
        volumeMounts:
          - name: watch-dir
            mountPath: /data/Home/Downloads
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 20m
            memory: 50Mi
          limits:
            cpu: "800m"
            memory: 400Mi

      - name: sync
        image: "beclab/recommend-sync:v0.0.15"
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
        env:
        - name: TERMIUS_USER_NAME
          value: "{{ .Values.bfl.username }}"
        - name: JUICEFS_ROOT_DIRECTORY
          value: /juicefs
        - name: KNOWLEDGE_BASE_API_URL
          value: http://127.0.0.1:3010
        - name: PG_HOST
          value: citus-master-svc.user-system-{{ .Values.bfl.username }}
        - name: PG_USERNAME
          value: knowledge_{{ .Values.bfl.username }}
        - name: PG_PASSWORD
          value: {{ $pg_password | b64dec }}
        - name: PG_DATABASE
          value: user_space_{{ .Values.bfl.username }}_knowledge
        - name: PG_PORT
          value: "5432"
        - name: TERMINUS_RECOMMEND_REDIS_ADDR
          valueFrom:
            configMapKeyRef:
              name: knowledge-secrets-auth
              key: redis_addr
        - name: TERMINUS_RECOMMEND_REDIS_PASSOWRD
          valueFrom:
            configMapKeyRef:
              name: knowledge-secrets-auth
              key: redis_password
        volumeMounts:
        - name: juicefs
          mountPath: /juicefs
       
      - name: crawler
        image: "beclab/recommend-crawler:v0.0.14"
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
        env:
        - name: TERMIUS_USER_NAME
          value: "{{ .Values.bfl.username }}"
        - name: KNOWLEDGE_BASE_API_URL
          value: http://127.0.0.1:3010
        resources:
          requests:
            cpu: 20m
            memory: 50Mi
          limits:
            cpu: "800m"
            memory: 800Mi

      - name: terminus-ws-sidecar
        image: 'beclab/ws-gateway:v1.0.3'
        imagePullPolicy: IfNotPresent
        command:
          - /ws-gateway
        env:
          - name: WS_PORT
            value: '3010'
          - name: WS_URL
            value: /knowledge/websocket/message
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

      volumes:
      - name: watch-dir
        hostPath:
          type: Directory
          path: {{ .Values.userspace.userData }}
      - name: juicefs
        hostPath:
          type: DirectoryOrCreate
          path: {{ .Values.userspace.appData }}/rss/data
          
      - name: terminus-sidecar-config
        configMap:
          name: sidecar-ws-configs
          items:
          - key: envoy.yaml
            path: envoy.yaml
      

---
apiVersion: v1
kind: Service
metadata:
  name: rss-svc
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: knowledge
  ports:
    - name: "backend-server"
      protocol: TCP
      port: 8080
      targetPort: 8080
    # - name: "rss-sdk"
    #   protocol: TCP
    #   port: 3000
    #   targetPort: 3000
    - name: "knowledge-base-api"
      protocol: TCP
      port: 3010
      targetPort: 3010

---
apiVersion: v1
kind: Service
metadata:
  name: knowledge-base-api
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  type: ClusterIP
  selector:
    app: systemserver
  ports:
    - protocol: TCP
      name: knowledge-api
      port: 3010
      targetPort: 3010  
---
#apiVersion: v1
#data:
#  mappings: |
#    {
#      "properties": {
#        "@timestamp": {
#          "type": "date",
#          "index": true,
#          "store": false,
#          "sortable": true,
#          "aggregatable": true,
#          "highlightable": false
#        },
#        "_id": {
#          "type": "keyword",
#          "index": true,
#          "store": false,
#          "sortable": true,
#          "aggregatable": true,
#          "highlightable": false
#        },
#        "content": {
#          "type": "text",
#          "index": true,
#          "store": true,
#          "sortable": false,
#          "aggregatable": false,
#          "highlightable": true
#        },
#        "created": {
#          "type": "numeric",
#          "index": true,
#          "store": false,
#          "sortable": true,
#          "aggregatable": true,
#          "highlightable": false
#        },
#        "format_name": {
#          "type": "text",
#          "index": true,
#          "store": false,
#          "sortable": false,
#          "aggregatable": false,
#          "highlightable": false
#        },
#        "md5": {
#          "type": "text",
#          "analyzer": "keyword",
#          "index": true,
#          "store": false,
#          "sortable": false,
#          "aggregatable": false,
#          "highlightable": false
#        },
#        "meta": {
#          "type": "text",
#          "index": true,
#          "store": false,
#          "sortable": false,
#          "aggregatable": false,
#          "highlightable": false
#        },
#        "name": {
#          "type": "text",
#          "index": true,
#          "store": false,
#          "sortable": false,
#          "aggregatable": false,
#          "highlightable": false
#        },
#        "where": {
#          "type": "text",
#          "analyzer": "keyword",
#          "index": true,
#          "store": false,
#          "sortable": false,
#          "aggregatable": false,
#          "highlightable": false
#        }
#      }
#    }
#kind: ConfigMap
#metadata:
#  name: zinc-knowledge
#  namespace: user-system-{{ .Values.bfl.username }}
#---


apiVersion: apr.bytetrade.io/v1alpha1
kind: SysEventRegistry
metadata:
  name: konwledgebase-recommend-install-cb
  namespace: {{ .Release.Namespace }}
spec:
  type: subscriber
  event: recommend.install
  callback: http://rss-svc.{{ .Release.Namespace }}:3010/knowledge/algorithm/recommend/install
  
---
apiVersion: apr.bytetrade.io/v1alpha1
kind: SysEventRegistry
metadata:
  name: konwledgebase-recommend-uninstall-cb
  namespace: {{ .Release.Namespace }}
spec:
  type: subscriber
  event: recommend.uninstall
  callback: http://rss-svc.{{ .Release.Namespace }}:3010/knowledge/algorithm/recommend/uninstall
