

name: Daily Build Release

on:
  schedule:
    # This is a UTC time
    - cron: "30 18 * * *"
  workflow_dispatch:

jobs:
  push-images:
    runs-on: ubuntu-22.04

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3

      - env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        run: |
          bash scripts/image-manifest.sh && bash scripts/upload-images.sh .manifest/images.mf

  push-images-arm64:
    runs-on: [self-hosted, linux, ARM64]

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3

      - env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        run: |
          export PATH=$PATH:/usr/local/bin:/home/ubuntu/.local/bin
          bash scripts/image-manifest.sh && bash scripts/upload-images.sh .manifest/images.mf linux/arm64

  push-deps:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3

      # test
      - env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          bash scripts/deps-manifest.sh && bash scripts/upload-deps.sh

  push-deps-arm64:
    runs-on: [self-hosted, linux, ARM64]

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3

      # test
      - env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          export PATH=$PATH:/usr/local/bin:/home/ubuntu/.local/bin
          bash scripts/deps-manifest.sh linux/arm64 && bash scripts/upload-deps.sh linux/arm64


  upload-package:
    needs: [push-images, push-images-arm64, push-deps, push-deps-arm64]
    runs-on: ubuntu-latest

    steps:
      - name: 'Daily tag version'
        id: vars
        run: |
          v=1.12.0-$(date +"%Y%m%d")
          echo "tag_version=$v" >> $GITHUB_OUTPUT

      - name: 'Checkout source code'
        uses: actions/checkout@v3

      - name: Package installer
        run: |
          bash scripts/build.sh ${{ steps.vars.outputs.tag_version }}

      - name: Upload to S3
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        run: |
          md5sum install-wizard-v${{ steps.vars.outputs.tag_version }}.tar.gz > install-wizard-v${{ steps.vars.outputs.tag_version }}.md5sum.txt && \
          aws s3 cp install-wizard-v${{ steps.vars.outputs.tag_version }}.md5sum.txt s3://terminus-os-install/install-wizard-v${{ steps.vars.outputs.tag_version }}.md5sum.txt --acl=public-read && \
          aws s3 cp install-wizard-v${{ steps.vars.outputs.tag_version }}.tar.gz s3://terminus-os-install/install-wizard-v${{ steps.vars.outputs.tag_version }}.tar.gz --acl=public-read

          
  release:
    needs: [upload-package]
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3

      - name: 'Daily tag version'
        id: vars
        run: |
          v=1.12.0-$(date +"%Y%m%d")
          echo "tag_version=$v" >> $GITHUB_OUTPUT
          echo "version_md5sum=$(curl -sSfL https://dc3p1870nn3cj.cloudfront.net/install-wizard-v${v}.md5sum.txt|awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Update checksum
        uses: eball/write-tag-to-version-file@latest
        with:
          filename: 'build/installer/install.sh'
          placeholder: '#__MD5SUM__'
          tag: ${{ steps.vars.outputs.version_md5sum }}
      
      - name: Package installer
        run: |
          bash scripts/build.sh ${{ steps.vars.outputs.tag_version }}

      - name: 'Archives'
        run: |
          cp .dist/install-wizard/install.sh build/installer
          cp build/installer/install.sh build/installer/publicInstaller.sh
          cp .dist/install-wizard/install.ps1 build/installer

      - name: Release public files
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.vars.outputs.tag_version }} Release
          tag_name: ${{ steps.vars.outputs.tag_version }}
          files: |
            install-wizard-v${{ steps.vars.outputs.tag_version }}.tar.gz
            build/installer/publicInstaller.sh
            build/installer/install.sh
            build/installer/install.ps1
            build/installer/publicAddnode.sh
            build/installer/version.hint
            build/installer/publicRestoreInstaller.sh
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
