

name: Install Wizard Release

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Release Tags'

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tags }}

      - env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        run: |
          bash scripts/image-manifest.sh && bash scripts/upload-images.sh .manifest/images.mf

  push-arm64:
    runs-on: self-hosted

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tags }}

      - env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        run: |
          bash scripts/image-manifest.sh && bash scripts/upload-images.sh .manifest/images.mf linux/arm64

  upload-full:
    needs: [push, push-arm64]
    runs-on: ubuntu-latest

    steps:
      # - name: Maximize build space
      #   uses: easimon/maximize-build-space@master
      #   with:
      #     root-reserve-mb: 21200
      #     swap-size-mb: 1024
      #     remove-dotnet: 'true'
      #     remove-android: 'true'
      #     remove-haskell: 'true'
      #     remove-codeql: 'true'

      - name: 'Checkout source code'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tags }}

      - name: Package installer
        run: |
          bash scripts/build.sh ${{ github.event.inputs.tags }}

      - name: Upload to S3
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        run: |
          aws s3 cp install-wizard-v${{ github.event.inputs.tags }}.tar.gz s3://terminus-os-install/install-wizard-v${{ github.event.inputs.tags }}.tar.gz --acl=public-read

  upload-full-arm64:
    needs: [push, push-arm64]
    runs-on: self-hosted

    steps:
      # - name: Maximize build space
      #   uses: easimon/maximize-build-space@master
      #   with:
      #     root-reserve-mb: 21200
      #     swap-size-mb: 1024
      #     remove-dotnet: 'true'
      #     remove-android: 'true'
      #     remove-haskell: 'true'
      #     remove-codeql: 'true'

      - name: 'Checkout source code'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tags }}

      - name: Package installer
        run: |
          bash scripts/build.sh ${{ github.event.inputs.tags }} linux/arm64

      - name: Upload to S3
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        run: |
          aws s3 cp install-wizard-v${{ github.event.inputs.tags }}.tar.gz s3://terminus-os-install/install-wizard-${{ github.event.inputs.tags }}-arm64.tar.gz --acl=public-read

  release:
    runs-on: ubuntu-latest
    needs: [upload-full, upload-full-arm64]

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tags }}

      - name: Package installer
        run: |
          bash scripts/package.sh

      - name: Update version
        uses: eball/write-tag-to-version-file@latest
        with:
          filename: 'build/installer/wizard/config/settings/templates/terminus_cr.yaml'
          placeholder: '#__VERSION__'
          tag: ${{ github.event.inputs.tags }}
      
      - name: Update env
        working-directory: ./build/installer
        run: |
          echo 'DEBUG_VERSION="false"' > .env

      - name: Update latest installer
        uses: eball/write-tag-to-version-file@latest
        with:
          filename: 'build/installer/publicInstaller.latest'
          placeholder: '#{{LATEST_VERSION}}'
          tag: ${{ github.event.inputs.tags }}

      - name: 'Archives'
        working-directory: ./build/installer
        run: |
          mkdir -p /tmp/build
          tar --exclude=wizard/tools --exclude=.git -zcvf /tmp/build/install-wizard-v${{ github.event.inputs.tags }}.tar.gz .

      - name: Release public files
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ github.event.inputs.tags }} Release
          tag_name: ${{ github.event.inputs.tags }}
          files: |
            /tmp/build/install-wizard-v${{ github.event.inputs.tags }}.tar.gz
            build/installer/publicInstaller.sh
            build/installer/publicInstaller.latest
            build/installer/uninstall_cmd.sh
            build/installer/publicAddnode.sh
            build/installer/version.hint
            build/installer/publicRestoreInstaller.sh
          # prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
