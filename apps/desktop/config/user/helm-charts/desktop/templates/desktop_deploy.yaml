---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-desktop
  namespace: {{ .Release.Namespace }}
  labels:
    app: edge-desktop
    applications.app.bytetrade.io/author: bytetrade.io
  annotations:
    applications.app.bytetrade.io/version: '0.0.1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edge-desktop
  template:
    metadata:
      labels:
        app: edge-desktop
    spec:
      initContainers:
      - args:
        - -it
        - authelia-backend.os-system:9091
        image: owncloudci/wait-for:latest
        imagePullPolicy: IfNotPresent
        name: check-auth
      - name: terminus-sidecar-init
        image: openservicemesh/init:v1.2.3
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          capabilities: 
            add:
            - NET_ADMIN
          runAsNonRoot: false
          runAsUser: 0
        command:
        - /bin/sh
        - -c
        - |
          iptables-restore --noflush <<EOF
          # sidecar interception rules
          *nat
          :PROXY_IN_REDIRECT - [0:0]
          :PROXY_INBOUND - [0:0]
          -A PROXY_IN_REDIRECT -p tcp -j REDIRECT --to-port 15003
          -A PROXY_INBOUND -p tcp --dport 15000 -j RETURN
          -A PROXY_INBOUND -p tcp -j PROXY_IN_REDIRECT
          -A PREROUTING -p tcp -j PROXY_INBOUND
          COMMIT
          EOF
        
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP

      containers:
      - name: edge-desktop
        image: beclab/desktop:v0.2.30
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
          - name: apiServerURL
            value: http://bfl.{{ .Release.Namespace }}:8080

      - name: desktop-server
        image: beclab/desktop-server:v0.2.30
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: userspace-dir
          mountPath: /Home
        ports:
        - containerPort: 3000
        env:
        - name: OS_SYSTEM_SERVER
          value: system-server.user-system-{{ .Values.bfl.username }}
        - name: OS_APP_SECRET
          value: '{{ .Values.os.desktop.appSecret }}'
        - name: OS_APP_KEY
          value: {{ .Values.os.desktop.appKey }}
        - name: APP_SERVICE_SERVICE_HOST
          value: app-service.os-system
        - name: APP_SERVICE_SERVICE_PORT
          value: '6755'

      - name: terminus-envoy-sidecar
        image: bytetrade/envoy:v1.25.11
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
        ports:
        - name: proxy-admin
          containerPort: 15000
        - name: proxy-inbound
          containerPort: 15003
        volumeMounts:
        - name: terminus-sidecar-config
          readOnly: true
          mountPath: /etc/envoy/envoy.yaml
          subPath: envoy.yaml
        command:
        - /usr/local/bin/envoy
        - --log-level
        - debug
        - -c
        - /etc/envoy/envoy.yaml
        env:
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      - name: terminus-ws-sidecar
        image: 'beclab/ws-gateway:v1.0.3'
        imagePullPolicy: IfNotPresent
        command:
          - /ws-gateway
        env:
          - name: WS_PORT
            value: '3010'
          - name: WS_URL
            value: /websocket/message
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: userspace-dir
        hostPath:
          type: Directory
          path: {{ .Values.userspace.userData }}
      - name: terminus-sidecar-config
        configMap:
          name: sidecar-ws-configs
          items:
          - key: envoy.yaml
            path: envoy.yaml

---
apiVersion: v1
kind: Service
metadata:
  name: edge-desktop
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: edge-desktop
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ .Release.Namespace }}
  name: internal-kubectl

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Namespace }}:edge-desktop-rb
subjects:
  - kind: ServiceAccount
    namespace: {{ .Release.Namespace }}
    name: internal-kubectl
roleRef:
  # kind: Role
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: app-event-watcher
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  callbacks:
  - filters:
      type:
      - app-installation-event
    op: Create
    uri: /server/app_installation_event
  - filters:
      type:
      - settings-event
    op: Create
    uri: /server/app_installation_event
  - filters:
      type:
      - system-upgrade-event
    op: Create
    uri: /server/system_upgrade_event
  dataType: event
  deployment: edge-desktop
  description: desktop event watcher
  endpoint: edge-desktop.{{ .Release.Namespace }}
  group: message-disptahcer.system-server
  kind: watcher
  namespace: {{ .Release.Namespace }}
  version: v1
status:
  state: active

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: intent-api
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  dataType: legacy_api
  deployment: edge-desktop
  description: edge-desktop legacy api
  endpoint: edge-desktop.{{ .Release.Namespace }}
  group: api.intent
  kind: provider
  namespace: {{ .Release.Namespace }}
  version: v1
  opApis:
  - name: POST
    uri: /server/intent/send
status:
  state: active

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: intent-api-v2
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  dataType: legacy_api
  deployment: edge-desktop
  description: edge-desktop legacy api
  endpoint: edge-desktop.{{ .Release.Namespace }}
  group: api.intent
  kind: provider
  namespace: {{ .Release.Namespace }}
  version: v2
  opApis:
    - name: POST
      uri: /server/intent/send
status:
  state: active

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: destktop-ai-provider
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  dataType: ai_message
  deployment: edge-desktop
  description: search ai callback
  endpoint: edge-desktop.{{ .Release.Namespace }}
  group: service.desktop
  kind: provider
  namespace: {{ .Release.Namespace }}
  opApis:
  - name: AIMessage
    uri: /server/ai_message
  version: v1
status:
  state: active

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: desktop-notification
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  dataType: notification
  deployment: edge-desktop
  description: send notification to desktop client
  endpoint: edge-desktop.{{ .Release.Namespace }}
  group: service.desktop
  kind: provider
  namespace: {{ .Release.Namespace }}
  opApis:
  - name: Create
    uri: /notification/create
  - name: Query
    uri: /notification/query
  version: v1
status:
  state: active

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ApplicationPermission
metadata:
  name: desktop
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  app: desktop
  appid: desktop
  key: {{ .Values.os.desktop.appKey }}
  secret: {{ .Values.os.desktop.appSecret }}
  permissions:
  - dataType: files
    group: service.files
    ops:
    - Query
    version: v1
  - dataType: datastore
    group: service.bfl
    ops:
    - GetKey
    - GetKeyPrefix
    - SetKey
    - DeleteKey
    version: v1
  - dataType: app
    group: service.bfl
    ops:
    - UserApps
    version: v1
  - dataType: app
    group: service.appstore
    ops:
    - UninstallDevApp
    version: v1
status:
  state: active

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: desktop-config
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  dataType: config
  deployment: edge-desktop
  description: Set Desktop Config
  endpoint: edge-desktop.{{ .Release.Namespace }}
  group: service.desktop
  kind: provider
  namespace: {{ .Release.Namespace }}
  opApis:
  - name: Update
    uri: /server/updateDesktopConfig
  version: v1
status:
  state: active

---
apiVersion: v1
data:
  envoy.yaml: |
    admin:
      access_log_path: "/dev/stdout"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 15000
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 15003
        listener_filters:
          - name: envoy.filters.listener.original_dst
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst
        filter_chains:
          - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  stat_prefix: desktop_http
                  upgrade_configs:
                  - upgrade_type: websocket      
                  - upgrade_type: tailscale-control-protocol            
                  skip_xff_append: false
                  codec_type: AUTO
                  route_config:
                    name: local_route
                    virtual_hosts:
                      - name: service
                        domains: ["*"]
                        routes:
                          - match:
                              prefix: "/"
                            route:
                              cluster: original_dst
                              timeout: 180s
                  http_protocol_options:
                    accept_http_10: true
                  http_filters:
                  - name: envoy.filters.http.ext_authz
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      http_service:
                        path_prefix: '/api/verify/'
                        server_uri:
                          uri: authelia-backend.os-system:9091
                          cluster: authelia
                          timeout: 2s
                        authorization_request:
                          allowed_headers:
                            patterns:
                              - exact: accept
                              - exact: cookie
                              - exact: proxy-authorization
                              - prefix: x-unauth-
                              - exact: x-authorization
                              - exact: x-bfl-user
                              - exact: terminus-nonce
                          headers_to_add:
                            - key: X-Forwarded-Method
                              value: '%REQ(:METHOD)%'
                            - key: X-Forwarded-Proto
                              value: '%REQ(:SCHEME)%'
                            - key: X-Forwarded-Host
                              value: '%REQ(:AUTHORITY)%'
                            - key: X-Forwarded-Uri
                              value: '%REQ(:PATH)%'
                            - key: X-Forwarded-For
                              value: '%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%'
                        authorization_response:
                          allowed_upstream_headers:
                            patterns:
                              - exact: authorization
                              - exact: proxy-authorization
                              - prefix: remote-
                              - prefix: authelia-
                          allowed_client_headers:
                            patterns:
                              - exact: set-cookie
                          allowed_client_headers_on_success:
                            patterns:
                              - exact: set-cookie
                      failure_mode_allow: false                      
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      - name: listener_image
        address:
          socket_address:
            address: 127.0.0.1
            port_value: 15080
        filter_chains:
          - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  stat_prefix: tapr_http
                  upgrade_configs:
                  - upgrade_type: websocket                  
                  skip_xff_append: false
                  codec_type: AUTO
                  route_config:
                    name: local_route
                    virtual_hosts:
                      - name: service
                        domains: ["*"]
                        routes:
                          - match:
                              prefix: "/images/upload"
                            route:
                              cluster: images
                  http_protocol_options:
                    accept_http_10: true
                  http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        
        
      clusters:
      - name: original_dst
        connect_timeout: 5000s
        type: ORIGINAL_DST
        lb_policy: CLUSTER_PROVIDED
      - name: authelia
        connect_timeout: 2s
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        dns_refresh_rate: 600s
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: authelia
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: authelia-backend.os-system
                        port_value: 9091
      - name: images
        connect_timeout: 5s
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        dns_refresh_rate: 600s
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: images
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: tapr-images-svc.user-system-{{ .Values.bfl.username }}
                        port_value: 8080
kind: ConfigMap
metadata:
  name: sidecar-configs
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
data:
  envoy.yaml: |
    admin:
      access_log_path: "/dev/stdout"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 15000
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 15003
        listener_filters:
          - name: envoy.filters.listener.original_dst
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst
        filter_chains:
          - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  stat_prefix: desktop_http
                  upgrade_configs:
                  - upgrade_type: websocket      
                  - upgrade_type: tailscale-control-protocol            
                  skip_xff_append: false
                  codec_type: AUTO
                  route_config:
                    name: local_route
                    virtual_hosts:
                      - name: service
                        domains: ["*"]
                        routes:
                          - match:
                              prefix: "/ws"
                            route:
                              cluster: ws_original_dst
                          - match:
                              prefix: "/"
                            route:
                              cluster: original_dst
                              timeout: 180s
                  http_protocol_options:
                    accept_http_10: true
                  http_filters:
                  - name: envoy.filters.http.ext_authz
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      http_service:
                        path_prefix: '/api/verify/'
                        server_uri:
                          uri: authelia-backend.os-system:9091
                          cluster: authelia
                          timeout: 2s
                        authorization_request:
                          allowed_headers:
                            patterns:
                              - exact: accept
                              - exact: cookie
                              - exact: proxy-authorization
                              - prefix: x-unauth-
                              - exact: x-authorization
                              - exact: x-bfl-user
                              - exact: terminus-nonce
                          headers_to_add:
                            - key: X-Forwarded-Method
                              value: '%REQ(:METHOD)%'
                            - key: X-Forwarded-Proto
                              value: '%REQ(:SCHEME)%'
                            - key: X-Forwarded-Host
                              value: '%REQ(:AUTHORITY)%'
                            - key: X-Forwarded-Uri
                              value: '%REQ(:PATH)%'
                            - key: X-Forwarded-For
                              value: '%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%'
                        authorization_response:
                          allowed_upstream_headers:
                            patterns:
                              - exact: authorization
                              - exact: proxy-authorization
                              - prefix: remote-
                              - prefix: authelia-
                          allowed_client_headers:
                            patterns:
                              - exact: set-cookie
                          allowed_client_headers_on_success:
                            patterns:
                              - exact: set-cookie
                      failure_mode_allow: false                      
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      - name: listener_image
        address:
          socket_address:
            address: 127.0.0.1
            port_value: 15080
        filter_chains:
          - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  stat_prefix: tapr_http
                  upgrade_configs:
                  - upgrade_type: websocket                  
                  skip_xff_append: false
                  codec_type: AUTO
                  route_config:
                    name: local_route
                    virtual_hosts:
                      - name: service
                        domains: ["*"]
                        routes:
                          - match:
                              prefix: "/images/upload"
                            route:
                              cluster: images
                  http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        
        
      clusters:
      - name: original_dst
        connect_timeout: 5000s
        type: ORIGINAL_DST
        lb_policy: CLUSTER_PROVIDED
      - name: ws_original_dst
        connect_timeout: 5000s
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        dns_refresh_rate: 600s
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: ws_original_dst
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: localhost
                        port_value: 40010
      - name: authelia
        connect_timeout: 2s
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        dns_refresh_rate: 600s
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: authelia
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: authelia-backend.os-system
                        port_value: 9091
      - name: images
        connect_timeout: 5s
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        dns_refresh_rate: 600s
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: images
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: tapr-images-svc.user-system-{{ .Values.bfl.username }}
                        port_value: 8080
kind: ConfigMap
metadata:
  name: sidecar-ws-configs
  namespace: {{ .Release.Namespace }}
